#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AW2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="messageData")]
	public partial class messagesDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertawMessage(awMessage instance);
    partial void UpdateawMessage(awMessage instance);
    partial void DeleteawMessage(awMessage instance);
    #endregion
		
		public messagesDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["messageDataConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public messagesDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public messagesDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public messagesDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public messagesDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<awMessage> awMessages
		{
			get
			{
				return this.GetTable<awMessage>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spRnd")]
		public ISingleResult<spRndResult> spRnd([global::System.Data.Linq.Mapping.ParameterAttribute(Name="P", DbType="NChar(1)")] System.Nullable<char> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p);
			return ((ISingleResult<spRndResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.awMessages")]
	public partial class awMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _messageID;
		
		private string _messageText;
		
		private System.DateTime _messageDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmessageIDChanging(long value);
    partial void OnmessageIDChanged();
    partial void OnmessageTextChanging(string value);
    partial void OnmessageTextChanged();
    partial void OnmessageDateTimeChanging(System.DateTime value);
    partial void OnmessageDateTimeChanged();
    #endregion
		
		public awMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long messageID
		{
			get
			{
				return this._messageID;
			}
			set
			{
				if ((this._messageID != value))
				{
					this.OnmessageIDChanging(value);
					this.SendPropertyChanging();
					this._messageID = value;
					this.SendPropertyChanged("messageID");
					this.OnmessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string messageText
		{
			get
			{
				return this._messageText;
			}
			set
			{
				if ((this._messageText != value))
				{
					this.OnmessageTextChanging(value);
					this.SendPropertyChanging();
					this._messageText = value;
					this.SendPropertyChanged("messageText");
					this.OnmessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime messageDateTime
		{
			get
			{
				return this._messageDateTime;
			}
			set
			{
				if ((this._messageDateTime != value))
				{
					this.OnmessageDateTimeChanging(value);
					this.SendPropertyChanging();
					this._messageDateTime = value;
					this.SendPropertyChanged("messageDateTime");
					this.OnmessageDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spRndResult
	{
		
		private long _messageID;
		
		private string _messageText;
		
		private System.DateTime _messageDateTime;
		
		public spRndResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageID", DbType="BigInt NOT NULL")]
		public long messageID
		{
			get
			{
				return this._messageID;
			}
			set
			{
				if ((this._messageID != value))
				{
					this._messageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string messageText
		{
			get
			{
				return this._messageText;
			}
			set
			{
				if ((this._messageText != value))
				{
					this._messageText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime messageDateTime
		{
			get
			{
				return this._messageDateTime;
			}
			set
			{
				if ((this._messageDateTime != value))
				{
					this._messageDateTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
